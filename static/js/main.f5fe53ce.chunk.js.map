{"version":3,"sources":["header.js","ColourRatings.js","TimelimitModal.js","cssColours.js","Request.js","Logic.js","App.js","reportWebVitals.js","index.js"],"names":["HeaderComponent","className","ColourRatings","props","colourRank","style","Table","colours","map","colourElem","color","cssStyleColourValue","colour","requests","Button","type","value","onClick","myFunction","modalHandle","TimelimitModal","useState","show","setShow","time","setTime","handleClose","Modal","onHide","Header","closeButton","Title","theTimeLimit","Body","onChange","event","target","min","Footer","variant","timeLimitFunction","CssColourList","factory","colourList","trendingLimit","requestColour","colVal","trim","upperCaseColour","toUpperCase","substring","test","replace","c","lowerCase","toLowerCase","validCSSColour","Option","some","elem","i","length","itt","indexOf","Object","keys","index","console","log","newColour","push","filtering","rank","filter","removingColour","splice","hasOwnProperty","timeLimit","timeVal","setTimeout","updateRequest","reqVal","findIndex","FactoryLogic","Request","state","submit","showHideRequestModal","colourSelectedForUpdate","cssColourNameSelectedForUpdate","colourRequestSelectedForUpdate","colourRequestUpdateChange","colourRequestUpdateSubmitHandle","trendList","popList","upList","handleChange","bind","handleSubmit","timeLimitModal","handleRequestModalShowHide","handleRequestUpdate","colourRequestUpdateSubmit","setInterval","setState","this","preventDefault","timeLimitVal","cssVal","Form","onSubmit","Group","Control","required","Label","for","options","id","placeholder","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAAe,SAASA,IACpB,OACI,qBAAKC,UAAU,uCAAf,SACI,oBAAIA,UAAU,gBAAd,+B,4FCEG,SAASC,EAAcC,GAElC,OACI,sBAAKF,UAAU,OAAf,UACI,oBAAIA,UAAU,OAAd,SAAsBE,EAAMC,aAC5B,qBAAKH,UAAU,qBAAqBI,MAAO,CAAC,gBAAmB,UAAW,YAAe,WAAzF,SACI,eAACC,EAAA,EAAD,CAAOL,UAAU,gCAAjB,UACI,gCACA,+BACI,wCACA,0CACA,6CAGJ,gCACCE,EAAMI,QAAQC,KAAI,SAAAC,GAAU,OACzB,+BACI,+BAAI,cAAC,IAAD,CAAWC,MAAOD,EAAWE,sBAAuBF,EAAWG,UACnE,6BAAKH,EAAWI,WAChB,+BAAI,cAACC,EAAA,EAAD,CAAQb,UAAU,wBAAwBc,KAAK,SAASC,MAAOP,EAAWE,oBAAqBM,QAAS,kBAAId,EAAMe,WAAWT,EAAWE,sBAAxI,oBAAJ,IAAkL,cAACG,EAAA,EAAD,CAAQb,UAAU,2BAA2Bc,KAAK,SAASC,MAAOP,EAAWE,oBAAqBM,QAAS,kBAAId,EAAMgB,YAAYV,EAAWE,oBAAqBF,EAAWG,OAAQH,EAAWI,WAA/L,qC,0BCpB/L,SAASO,EAAejB,GACnC,MAAwBkB,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAuBF,qBAAvB,mBAAMG,EAAN,KAAYC,EAAZ,KAEMC,EAAc,kBAAMH,GAAQ,IAGlC,OAEE,qCACE,mBAAItB,UAAU,8BAA8BI,MAAO,CAAC,OAAU,WAAYY,QAL3D,kBAAMM,GAAQ,IAK7B,kDAIA,eAACI,EAAA,EAAD,CAAOL,KAAMA,EAAMM,OAAQF,EAA3B,UACE,cAACC,EAAA,EAAME,OAAP,CAAcC,aAAW,EAAzB,SACE,eAACH,EAAA,EAAMI,MAAP,8CAA8C5B,EAAM6B,aAApD,WAEA,eAACL,EAAA,EAAMM,KAAP,4CAA0C,uBAAOlB,KAAK,SAASmB,SAAU,SAAAC,GAAK,OAAGV,EAAQU,EAAMC,OAAOpB,QAAQqB,IAAI,SACpH,eAACV,EAAA,EAAMW,OAAP,WACE,cAACxB,EAAA,EAAD,CAAQyB,QAAQ,YAAYtB,QAASS,EAArC,mBAGA,cAACZ,EAAA,EAAD,CAAQyB,QAAQ,UAAUtB,QAAS,kBAAId,EAAMqC,kBAAkBhB,IAA/D,mCC3BZ,IAuJiBiB,EAvJG,CAChB,aACA,gBACA,OACA,aACA,QACA,QACA,SACA,QACA,kBACA,OACA,cACA,QACA,aACA,aACA,aACA,YACA,QACA,kBACA,WACA,UACA,OACA,YACA,YACA,kBACA,YACA,YACA,aACA,aACA,eACA,mBACA,cACA,cACA,WACA,cACA,iBACA,kBACA,kBACA,kBACA,iBACA,cACA,YACA,gBACA,WACA,WACA,cACA,aACA,eACA,eACA,UACA,YACA,cACA,OACA,aACA,OACA,OACA,QACA,eACA,YACA,WACA,aACA,SACA,QACA,QACA,WACA,iBACA,aACA,gBACA,aACA,cACA,aACA,0BACA,aACA,aACA,cACA,aACA,eACA,kBACA,iBACA,mBACA,mBACA,mBACA,eACA,OACA,aACA,QACA,UACA,SACA,qBACA,cACA,gBACA,gBACA,mBACA,oBACA,sBACA,mBACA,oBACA,gBACA,aACA,aACA,WACA,eACA,OACA,WACA,QACA,aACA,SACA,aACA,SACA,kBACA,aACA,iBACA,kBACA,cACA,aACA,OACA,OACA,OACA,cACA,SACA,iBACA,MACA,aACA,aACA,eACA,SACA,cACA,YACA,YACA,SACA,SACA,WACA,aACA,aACA,aACA,OACA,eACA,aACA,MACA,OACA,UACA,SACA,YACA,SACA,QACA,QACA,cACA,SACA,gBCzIEC,G,MCXS,WACX,IAAIC,EAAa,GACbC,EAAgB,GA6HpB,MAAO,CAAEC,cA3HT,SAAuBC,GACnB,IAAIC,EAAOD,EAAOC,OAGdC,EAAkBD,EAAK,GAAGE,cAAgBF,EAAKG,UAAU,GAC7D,GAAG,MAAMC,KAAKH,GAAkB,CAE5BA,EAAiCA,EADDI,QAAQ,gBAAgB,SAAAC,GAAC,OAAIA,EAAEJ,iBAKnE,IACIK,EAD0BP,EAAKK,QAAQ,OAAQ,IACXG,cACpCC,GAAiB,IAAIC,QAASpD,MAIlC,GAHAmD,EAAe9C,MAAQ4C,EAGnBE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","file":"static/js/main.f5fe53ce.chunk.js","sourcesContent":["export default function HeaderComponent(){\n    return(\n        <div className=\"container text-center border-bottom \">\n            <h1 className=\"display-4 p-3\">Balloons Galore</h1>\n        </div>\n    )\n}","import React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Table, Button } from 'react-bootstrap';\nimport { IoBalloon } from 'react-icons/io5';\n\nexport default function ColourRatings(props){\n\n    return(\n        <div className=\"mt-5\">\n            <h4 className=\"mb-3\">{props.colourRank}</h4>\n            <div className=\"border rounded p-4\" style={{\"backgroundColor\": \"#D2F2FF\", \"borderColor\": \"#D2F2FF\"}}>\n                <Table className=\"table table-hover text-center\">\n                    <thead>\n                    <tr>\n                        <th>Colour</th>\n                        <th>Requests</th>\n                        <th>Action</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {props.colours.map(colourElem =>\n                        <tr> \n                            <td><IoBalloon color={colourElem.cssStyleColourValue}/>{colourElem.colour}</td>\n                            <td>{colourElem.requests}</td>\n                            <td><Button className=\"btn btn-danger btn-sm\" type=\"button\" value={colourElem.cssStyleColourValue} onClick={()=>props.myFunction(colourElem.cssStyleColourValue)}>Remove</Button> <Button className=\"btn btn-secondary btn-sm\" type=\"button\" value={colourElem.cssStyleColourValue} onClick={()=>props.modalHandle(colourElem.cssStyleColourValue, colourElem.colour, colourElem.requests)}>Edit</Button></td>\n                        </tr>\n                    )}\n                    </tbody>\n                </Table>\n            </div>\n        </div>\n    );\n} ","import {React, useState}from 'react'\nimport { Button,Modal } from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.css';\n\nexport default function TimelimitModal(props) {\n    const [show, setShow] = useState(false);\n    const[time, setTime] = useState();\n  \n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    \n    return (\n\n      <>\n        <p  className=\"text-primary cursor-pointer\" style={{\"cursor\": \"pointer\"}} onClick={handleShow}>\n            Set time limit for trending balloons\n        </p>\n  \n        <Modal show={show} onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Current trending time limit is: {props.theTimeLimit}min</Modal.Title>\n          </Modal.Header>\n            <Modal.Body>Set new time limit (minutes): <input type=\"number\" onChange={event=> setTime(event.target.value)} min=\"1\"></input></Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Close\n            </Button>\n            <Button variant=\"primary\" onClick={()=>props.timeLimitFunction(time)}>\n              Save Changes\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n  }","let CssColourList = [\n    \"Alice Blue\",\n    \"Antique White\",\n    \"Aqua\",\n    \"Aquamarine\",\n    \"Azure\",\n    \"Beige\",\n    \"Bisque\",\n    \"Black\",\n    \"Blanched Almond\",\n    \"Blue\",\n    \"Blue Violet\",\n    \"Brown\",\n    \"Burly Wood\",\n    \"Cadet Blue\",\n    \"Chartreuse\",\n    \"Chocolate\",\n    \"Coral\",\n    \"Cornflower Blue\",\n    \"Cornsilk\",\n    \"Crimson\",\n    \"Cyan\",\n    \"Dark Blue\",\n    \"Dark Cyan\",\n    \"Dark Golden Rod\",\n    \"Dark Gray\",\n    \"Dark Grey\",\n    \"Dark Green\",\n    \"Dark Khaki\",\n    \"Dark Magenta\",\n    \"Dark Olive Green\",\n    \"Dark Orange\",\n    \"Dark Orchid\",\n    \"Dark Red\",\n    \"Dark Salmon\",\n    \"Dark Sea Green\",\n    \"Dark Slate Blue\",\n    \"Dark Slate Gray\",\n    \"Dark Slate Grey\",\n    \"Dark Turquoise\",\n    \"Dark Violet\",\n    \"Deep Pink\",\n    \"Deep Sky Blue\",\n    \"Dim Gray\",\n    \"Dim Grey\",\n    \"Dodger Blue\",\n    \"Fire Brick\",\n    \"Floral White\",\n    \"Forest Green\",\n    \"Fuchsia\",\n    \"Gainsboro\",\n    \"Ghost White\",\n    \"Gold\",\n    \"Golden Rod\",\n    \"Gray\",\n    \"Grey\",\n    \"Green\",\n    \"Green Yellow\",\n    \"Honey Dew\",\n    \"Hot Pink\",\n    \"Indian Red\",\n    \"Indigo\",\n    \"Ivory\",\n    \"Khaki\",\n    \"Lavender\",\n    \"Lavender Blush\",\n    \"Lawn Green\",\n    \"Lemon Chiffon\",\n    \"Light Blue\",\n    \"Light Coral\",\n    \"Light Cyan\",\n    \"Light Golden Rod Yellow\",\n    \"Light Gray\",\n    \"Light Grey\",\n    \"Light Green\",\n    \"Light Pink\",\n    \"Light Salmon\",\n    \"Light Sea Green\",\n    \"Light Sky Blue\",\n    \"Light Slate Gray\",\n    \"Light Slate Grey\",\n    \"Light Steel Blue\",\n    \"Light Yellow\",\n    \"Lime\",\n    \"Lime Green\",\n    \"Linen\",\n    \"Magenta\",\n    \"Maroon\",\n    \"Medium Aqua Marine\",\n    \"Medium Blue\",\n    \"Medium Orchid\",\n    \"Medium Purple\",\n    \"Medium Sea Green\",\n    \"Medium Slate Blue\",\n    \"Medium Spring Green\",\n    \"Medium Turquoise\",\n    \"Medium Violet Red\",\n    \"Midnight Blue\",\n    \"Mint Cream\",\n    \"Misty Rose\",\n    \"Moccasin\",\n    \"Navajo White\",\n    \"Navy\",\n    \"Old Lace\",\n    \"Olive\",\n    \"Olive Drab\",\n    \"Orange\",\n    \"Orange Red\",\n    \"Orchid\",\n    \"Pale Golden Rod\",\n    \"Pale Green\",\n    \"Pale Turquoise\",\n    \"Pale Violet Red\",\n    \"Papaya Whip\",\n    \"Peach Puff\",\n    \"Peru\",\n    \"Pink\",\n    \"Plum\",\n    \"Powder Blue\",\n    \"Purple\",\n    \"Rebecca Purple\",\n    \"Red\",\n    \"Rosy Brown\",\n    \"Royal Blue\",\n    \"Saddle Brown\",\n    \"Salmon\",\n    \"Sandy Brown\",\n    \"Sea Green\",\n    \"Sea Shell\",\n    \"Sienna\",\n    \"Silver\",\n    \"Sky Blue\",\n    \"Slate Blue\",\n    \"Slate Gray\",\n    \"Slate Grey\",\n    \"Snow\",\n    \"Spring Green\",\n    \"Steel Blue\",\n    \"Tan\",\n    \"Teal\",\n    \"Thistle\",\n    \"Tomato\",\n    \"Turquoise\",\n    \"Violet\",\n    \"Wheat\",\n    \"White\",\n    \"White Smoke\",\n    \"Yellow\",\n    \"Yellow Green\"\n  ];\n\n  export default CssColourList;","import React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Form, Modal, Button} from 'react-bootstrap';\nimport ColourRatings from './ColourRatings';\nimport FactoryLogic from './Logic';\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\nimport { Hint } from 'react-autocomplete-hint';\nimport TimelimitModal  from \"./TimelimitModal\";\nimport { IoBalloon } from 'react-icons/io5';\nimport CssColourList from './cssColours'\nimport { Input } from \"react-bootstrap-typeahead\";\nconst factory = FactoryLogic();\n\n\nexport default class Request extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            colour : '',\n            submit: '',\n            timeLimit : 5,\n            showHideRequestModal : false,\n            colourSelectedForUpdate : '',\n            cssColourNameSelectedForUpdate : '',\n            colourRequestSelectedForUpdate : '',\n            colourRequestUpdateChange : '',\n            colourRequestUpdateSubmitHandle : '',\n            trendList : factory.filtering(\"trending\"),\n            popList : factory.filtering(\"popular\"),\n            upList : factory.filtering(\"up and coming\"),\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.timeLimitModal = this.timeLimitModal.bind(this);\n        this.handleRequestModalShowHide = this.handleRequestModalShowHide.bind(this);\n        this.handleRequestUpdate = this.handleRequestUpdate.bind(this);\n        this.colourRequestUpdateSubmit = this.colourRequestUpdateSubmit.bind(this);\n\n        setInterval(()=>{ \n            this.setState({\n            trendList : factory.filtering(\"trending\"),\n            popList : factory.filtering(\"popular\"),\n            upList : factory.filtering(\"up and coming\")})}, 1000)\n        \n    }\n\n    handleChange(event) { \n        this.setState({\n            colour : event.target.value,\n        })\n    }\n\n    handleSubmit(event) {\n        event.preventDefault()\n            this.setState({\n            submit: this.state.colour\n        });\n        factory.requestColour(this.state.colour);\n        factory.timeLimit(this.state.timeLimit);\n        this.setState({\n            trendList : factory.filtering(\"trending\"),\n            popList : factory.filtering(\"popular\"),\n            upList : factory.filtering(\"up and coming\")\n        })\n    }\n\n    timeLimitModal(timeLimitVal){\n        this.setState({timeLimit : timeLimitVal})\n        factory.timeLimit(this.state.timeLimit);\n        this.setState({\n            trendList : factory.filtering(\"trending\"),\n            popList : factory.filtering(\"popular\"),\n            upList : factory.filtering(\"up and coming\")\n        })\n    }\n\n    handleRequestModalShowHide(cssVal, colVal, reqVal){\n        this.setState({\n            showHideRequestModal : !this.state.showHideRequestModal,\n            cssColourNameSelectedForUpdate : cssVal,\n            colourSelectedForUpdate : colVal,\n            colourRequestSelectedForUpdate : reqVal\n        })\n    }\n\n    handleRequestUpdate(event){\n        this.setState({\n            colourRequestUpdateChange : event.target.value\n        })\n    }\n    \n    colourRequestUpdateSubmit(event) {\n        event.preventDefault()\n        this.setState({\n            colourRequestUpdateSubmitHandle : this.state.colourRequestUpdateChange\n        })\n        factory.updateRequest(this.state.cssColourNameSelectedForUpdate, this.state.colourRequestUpdateChange);\n        this.setState({\n            colourRequestSelectedForUpdate : this.state.colourRequestUpdateChange,\n            trendList : factory.filtering(\"trending\"),\n            popList : factory.filtering(\"popular\"),\n            upList : factory.filtering(\"up and coming\")\n        })\n    }\n\n    render(){\n        return (\n            <div>\n                <div className=\"container mt-2 d-flex justify-content-start\">\n                <TimelimitModal theTimeLimit={this.state.timeLimit} timeLimitFunction={this.timeLimitModal}/>\n                <Modal show={this.state.showHideRequestModal}>\n                    <Modal.Header>\n                        <Modal.Title><IoBalloon color={this.state.cssColourNameSelectedForUpdate}/>{this.state.colourSelectedForUpdate} currently has {this.state.colourRequestSelectedForUpdate} requests.</Modal.Title>\n                    </Modal.Header>\n                    <Form onSubmit={this.colourRequestUpdateSubmit}>\n                        <Form.Group>\n                            <Modal.Body>Set new amount of requests: <Form.Control type=\"number\" min=\"1\" value={this.state.colourRequestUpdateChange} onChange={this.handleRequestUpdate} required></Form.Control></Modal.Body>\n                            <Modal.Footer>\n                                <Button variant=\"secondary\" onClick={()=>this.handleRequestModalShowHide()}>\n                                    Close\n                                </Button>\n                                <Button variant=\"primary\" type=\"submit\">\n                                    Save Changes\n                                </Button>\n                            </Modal.Footer>\n                        </Form.Group>\n                    </Form>\n                </Modal>\n                </div>\n                <div className=\"container mt-5 mb-3\">\n                    <div className=\"row\">\n                        <Form onSubmit={this.handleSubmit} className=\"form-inline\">\n                            <Form.Group>\n                                <div className=\"form-inline\">\n                                    <Form.Label for=\"colourInput\" className=\"col-4 d-flex mx-auto justify-content-start\"><h5>Request a colour:</h5></Form.Label>\n                                    <div className=\"input-group d-flex justify-content-center\">\n                                        <Hint options={CssColourList}><input type=\"text\" id=\"colourInput\" className=\"form-control\" placeholder=\"Enter colour\" value={this.state.colour} onChange={this.handleChange} style={{'width': '23em'}} required/></Hint>\n                                        <div className=\"input-group-append\">\n                                            <button type=\"submit\" className=\"btn btn-primary\">Request</button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </Form.Group>\n                        </Form> \n                    </div>\n                </div>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <ColourRatings colourRank={\"🔥 Trending\"} colours={this.state.trendList} myFunction={factory.removingColour} modalHandle={this.handleRequestModalShowHide}/>\n                        </div>\n                        <div className=\"col\">\n                            <ColourRatings colourRank={\"😎 Popular\"} colours={this.state.popList} myFunction={factory.removingColour} modalHandle={this.handleRequestModalShowHide}/>\n                        </div>\n                        <div className=\"col\">\n                            <ColourRatings colourRank={\"🔝 Up and Coming Colours\"} colours={this.state.upList} myFunction={factory.removingColour} modalHandle={this.handleRequestModalShowHide}/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n} ","export default function FactoryLogic() {\n    let colourList = [];\n    let trendingLimit = {};\n\n    function requestColour(colVal) {\n        let trim = colVal.trim();\n\n        //Handling the colour name to be displayed to viewer\n        let upperCaseColour = trim[0].toUpperCase() + trim.substring(1)\n        if(/\\s/g.test(upperCaseColour)) {\n            let uppercaseWords = str => str.replace(/^(.)|\\s+(.)/g, c => c.toUpperCase());\n            upperCaseColour = uppercaseWords(upperCaseColour);\n        };\n\n        //Handling the css colour value to check if input is a valid css colour\n        let removeWhiteSpaceBetween = trim.replace(/\\s+/g, '');\n        let lowerCase = removeWhiteSpaceBetween.toLowerCase(); \n        let validCSSColour = new Option().style;\n        validCSSColour.color = lowerCase;\n          \n         \n        if (validCSSColour.color) {\n            let checkIfColourExists = colourList.some(elem => elem.cssStyleColourValue === lowerCase);\n\n            if(checkIfColourExists) {\n                for(let i = 0; i < colourList.length; i++) {\n                    let itt = colourList[i];\n                    if (itt.cssStyleColourValue === lowerCase) {\n                        itt.requests++;\n\n                        if (itt.requests > 11){\n                            \n                            trendingLimit[itt.cssStyleColourValue] = colourList.indexOf(itt);\n\n                            if (Object.keys(trendingLimit).length > 3) {\n                            \n                                let index = trendingLimit[Object.keys(trendingLimit)[0]]\n                                colourList[index].requests = 9;\n                                delete trendingLimit[colourList[index].cssStyleColourValue];\n                                console.log(trendingLimit);\n                                trendingLimit[itt.cssStyleColourValue] = colourList.indexOf(itt);\n                            }\n                        }\n                    }\n                }\n            } else {\n                let newColour = {\n                    colour : upperCaseColour,\n                    cssStyleColourValue : lowerCase,\n                    requests : 1,\n                }\n                colourList.push(newColour);\n            }\n        }\n    }\n\n    function filtering(rank) {\n        \n        if (rank === \"trending\") {\n            var filt = colourList.filter(function(itt){\n                return itt.requests > 11;\n            })\n            return filt;\n\n        } else if (rank === \"popular\") {\n            var filt2 = colourList.filter(function(itt){\n                return itt.requests > 5 && itt.requests <= 11;\n            })\n            return filt2;\n\n        } else if (rank === \"up and coming\") {\n            var filt3 = colourList.filter(function(itt){\n                return itt.requests >= 1 && itt.requests <=5;\n            })\n            return filt3;\n        } \n    }\n\n    function timeLimit(timeVal) {\n        for (let i = 0; i < colourList.length; i++) {\n            let itt = colourList[i];\n            if(itt.requests > 11) {\n                \n                setTimeout(function(){\n                    itt.requests = 9; \n                }, timeVal * 60 * 1000);\n                \n            }\n        }\n    }\n\n    function removingColour(colVal) {\n        for(let i = 0; i < colourList.length; i++){\n            let itt = colourList[i];\n            if (itt.cssStyleColourValue === colVal) {\n                let index = colourList.indexOf(itt);\n                colourList.splice(index, 1);\n            }\n        }\n        if(trendingLimit.hasOwnProperty(colVal)) {\n            delete trendingLimit[colVal];\n        }\n    }\n\n    function updateRequest(colVal, reqVal) {\n        let index = colourList.findIndex(i=> i.cssStyleColourValue === colVal);\n        console.log(index);\n        colourList[index].requests = reqVal;\n        for (let i = 0; i < colourList.length; i++) {\n            let itt = colourList[i];\n            if (itt.requests > 11){\n                            \n                trendingLimit[itt.cssStyleColourValue] = colourList.indexOf(itt);\n\n                if (Object.keys(trendingLimit).length > 3) {\n                \n                    let index = trendingLimit[Object.keys(trendingLimit)[0]]\n                    colourList[index].requests = 9;\n                    delete trendingLimit[colourList[index].cssStyleColourValue];\n                    console.log(trendingLimit);\n                    trendingLimit[itt.cssStyleColourValue] = colourList.indexOf(itt);\n                }\n            }\n        }\n\n    }\n\n    return { requestColour,\n             filtering,\n             removingColour,\n             timeLimit,\n             updateRequest\n    }\n    \n}","import './App.css';\nimport HeaderComponent  from './header';\n// import ColourRequestRating from './ColourRanking';\nimport Request from './Request';\n\n\n\nfunction App() {\n  return (\n    <>\n      <HeaderComponent/>\n      <Request/>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}